
/*
 * Kordion 2.0.2
 * https://github.com/koirodev/kordion
 *
 * Copyright 2024 Vitaly Koiro
 *
 * Released under the MIT License
 *
 * Released on: November 08, 2024
*/
class Kordion{constructor(t,e={}){if(!t)return void console.error("No kordion selector provided!");this.settings={content:"[data-kordion-content]",hidden:"[data-kordion-hidden]",current:"[data-kordion-current]",icon:"[data-kordion-icon]",notClose:"[data-kordion-not-close]",container:["[data-kordion-container]",".section"],activeClass:"js-kordion-active",iconClass:".icon",speed:350,iconPath:"/assets/templates/img/sprite.svg#",scrollTo:!1,...e},this.kordion=t,this.initKordions()}initKordions(){const t=document.querySelectorAll(this.kordion);t.length&&t.forEach((t=>{const e=this.createKordionInstance(t);350!=this.settings.speed&&t.style.setProperty("--kordion-speed",this.settings.speed/1e3+"s"),e.current.addEventListener("click",(()=>{this.handleKordionClick(e,t)})),t.classList.contains(this.settings.activeClass)&&e.show()}))}createKordionInstance(t){const e={kordion:t,hidden:t.querySelector(this.settings.hidden),content:t.querySelector(this.settings.content),current:t.querySelector(this.settings.current),kordionIcon:null,iconHidden:null,iconShow:null};if(e.current.querySelector(this.settings.icon)){e.kordionIcon=e.current.querySelector(this.settings.icon);let t=e.kordionIcon.getAttribute(this.settings.icon.match(/\[([^\]]+)\]/)[1]);t=t.substring(1,t.length-1);const i=t.split(",");2===i.length?(e.iconHidden=i[0].trim(),e.iconShow=i[1].trim()):console.error("Invalid data-kordion-icon attribute"),e.kordionIcon.addEventListener("click",(t=>{t.preventDefault()}))}return e}handleKordionClick(t,e){if(t.current.closest(this.settings.content)){const i=t.current.closest(this.settings.hidden);return void(e.classList.contains(this.settings.activeClass)?(this.hideKordion(t),i.style.height=i.clientHeight-t.content.clientHeight+"px"):(this.showKordion(t),i.style.height=`${i.clientHeight+t.content.clientHeight}px`))}if(t.current.closest(this.settings.notClose))return void this.toggleKordion(t);const i=this.settings.container.find((e=>t.current.closest(e)));i&&this.hideAllKordions(t.current.closest(i)),this.toggleKordion(t),this.hideNestedKordions(e)}showKordion(t){t.hidden.style.height=`${t.content.clientHeight}px`,t.kordion.classList.add(this.settings.activeClass),this.settings.scrollTo&&t.content.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),setTimeout((()=>{this.replaceIcon(t,!1)}),this.settings.speed/2)}hideKordion(t){t.hidden.style.removeProperty("height"),t.kordion.classList.remove(this.settings.activeClass),setTimeout((()=>{this.replaceIcon(t,!0)}),this.settings.speed/2)}toggleKordion(t){!t.kordion.classList.contains(this.settings.activeClass)&&this.settings.scrollTo&&t.content.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),t.kordion.classList.contains(this.settings.activeClass)?this.hideKordion(t):this.showKordion(t),ScrollTrigger&&setTimeout((()=>{ScrollTrigger.refresh()}),this.settings.speed)}replaceIcon(t,e=!0){if(!t.kordionIcon)return;const i=t.kordionIcon.querySelector("use");if(!i)return void console.debug("No use tag found in the kordion icon");const o=e?t.iconHidden:t.iconShow;i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.settings.iconPath+o)}hideAllKordions(t){t.querySelectorAll(`${this.kordion}.${this.settings.activeClass}`).forEach((t=>{if(t!==event.target.closest(this.kordion)){const e=this.createKordionInstance(t);this.hideKordion(e)}}))}hideNestedKordions(t){t.querySelectorAll(this.kordion).forEach((t=>{const e=this.createKordionInstance(t);this.hideKordion(e)}))}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
