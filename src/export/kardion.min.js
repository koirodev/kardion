
/*
 * Kardion 2.0.0
 * https://github.com/koirodev/kardion
 *
 * Copyright 2024 Vitaly Koiro
 *
 * Released under the MIT License
 *
 * Released on: November 08, 2024
*/
class Kardion{constructor(t,e={}){if(!t)return void console.error("No kardion selector provided!");this.settings={content:"[data-kardion-content]",hidden:"[data-kardion-hidden]",current:"[data-kardion-current]",icon:"[data-kardion-icon]",notClose:"[data-kardion-not-close]",container:["[data-kardion-container]",".section"],activeClass:"js-kardion-active",iconClass:".icon",speed:350,iconPath:"/assets/templates/img/sprite.svg#",scrollTo:!1,...e},this.kardion=t,this.initKardions()}initKardions(){const t=document.querySelectorAll(this.kardion);t.length&&t.forEach((t=>{const e=this.createKardionInstance(t);350!=speed&&t.style.setProperty("--kardion-speed",this.settings.speed/1e3+"s"),e.current.addEventListener("click",(()=>{this.handleKardionClick(e,t)})),t.classList.contains(this.settings.activeClass)&&e.show()}))}createKardionInstance(t){const e={kardion:t,hidden:t.querySelector(this.settings.hidden),content:t.querySelector(this.settings.content),current:t.querySelector(this.settings.current),kardionIcon:null,iconHidden:null,iconShow:null};if(e.current.querySelector(this.settings.icon)){e.kardionIcon=e.current.querySelector(this.settings.icon);let t=e.kardionIcon.getAttribute(this.settings.icon.match(/\[([^\]]+)\]/)[1]);t=t.substring(1,t.length-1);const i=t.split(",");2===i.length?(e.iconHidden=i[0].trim(),e.iconShow=i[1].trim()):console.error("Invalid data-kardion-icon attribute"),e.kardionIcon.addEventListener("click",(t=>{t.preventDefault()}))}return e}handleKardionClick(t,e){if(t.current.closest(this.settings.content)){const i=t.current.closest(this.settings.hidden);return void(e.classList.contains(this.settings.activeClass)?(this.hideKardion(t),i.style.height=i.clientHeight-t.content.clientHeight+"px"):(this.showKardion(t),i.style.height=`${i.clientHeight+t.content.clientHeight}px`))}if(t.current.closest(this.settings.notClose))return void this.toggleKardion(t);const i=this.settings.container.find((e=>t.current.closest(e)));i&&this.hideAllKardions(t.current.closest(i)),this.toggleKardion(t),this.hideNestedKardions(e)}showKardion(t){t.hidden.style.height=`${t.content.clientHeight}px`,t.kardion.classList.add(this.settings.activeClass),this.settings.scrollTo&&t.content.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),setTimeout((()=>{this.replaceIcon(t,!1)}),this.settings.speed/2)}hideKardion(t){t.hidden.style.removeProperty("height"),t.kardion.classList.remove(this.settings.activeClass),setTimeout((()=>{this.replaceIcon(t,!0)}),this.settings.speed/2)}toggleKardion(t){!t.kardion.classList.contains(this.settings.activeClass)&&this.settings.scrollTo&&t.content.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),t.kardion.classList.contains(this.settings.activeClass)?this.hideKardion(t):this.showKardion(t),ScrollTrigger&&setTimeout((()=>{ScrollTrigger.refresh()}),this.settings.speed)}replaceIcon(t,e=!0){if(!t.kardionIcon)return;const i=t.kardionIcon.querySelector("use");if(!i)return void console.debug("No use tag found in the kardion icon");const s=e?t.iconHidden:t.iconShow;i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.settings.iconPath+s)}hideAllKardions(t){t.querySelectorAll(`${this.kardion}.${this.settings.activeClass}`).forEach((t=>{if(t!==event.target.closest(this.kardion)){const e=this.createKardionInstance(t);this.hideKardion(e)}}))}hideNestedKardions(t){t.querySelectorAll(this.kardion).forEach((t=>{const e=this.createKardionInstance(t);this.hideKardion(e)}))}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkthcmRpb24iLCJjb25zdHJ1Y3RvciIsImthcmRpb24iLCJvcHRpb25zIiwiY29uc29sZSIsImVycm9yIiwidGhpcyIsInNldHRpbmdzIiwiY29udGVudCIsImhpZGRlbiIsImN1cnJlbnQiLCJpY29uIiwibm90Q2xvc2UiLCJjb250YWluZXIiLCJhY3RpdmVDbGFzcyIsImljb25DbGFzcyIsInNwZWVkIiwiaWNvblBhdGgiLCJzY3JvbGxUbyIsImluaXRLYXJkaW9ucyIsImthcmRpb25zIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJrYXJkaW9uSW5zdGFuY2UiLCJjcmVhdGVLYXJkaW9uSW5zdGFuY2UiLCJzdHlsZSIsInNldFByb3BlcnR5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUthcmRpb25DbGljayIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwic2hvdyIsInF1ZXJ5U2VsZWN0b3IiLCJrYXJkaW9uSWNvbiIsImljb25IaWRkZW4iLCJpY29uU2hvdyIsImljb25MaXN0IiwiZ2V0QXR0cmlidXRlIiwibWF0Y2giLCJzdWJzdHJpbmciLCJpY29uQXJyYXkiLCJzcGxpdCIsInRyaW0iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiY2xvc2VzdCIsInBhcmVudENvbnRlbnQiLCJoaWRlS2FyZGlvbiIsImhlaWdodCIsImNsaWVudEhlaWdodCIsInNob3dLYXJkaW9uIiwidG9nZ2xlS2FyZGlvbiIsImNvbnRhaW5lckVsZW1lbnQiLCJmaW5kIiwic2VsZWN0b3IiLCJoaWRlQWxsS2FyZGlvbnMiLCJoaWRlTmVzdGVkS2FyZGlvbnMiLCJhZGQiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIiwiYmxvY2siLCJpbmxpbmUiLCJzZXRUaW1lb3V0IiwicmVwbGFjZUljb24iLCJyZW1vdmVQcm9wZXJ0eSIsInJlbW92ZSIsIlNjcm9sbFRyaWdnZXIiLCJyZWZyZXNoIiwidXNlVGFnIiwiZGVidWciLCJzZXRBdHRyaWJ1dGVOUyIsImNsb3Nlc3RPYmplY3QiLCJhY3RpdmVLYXJkaW9uIiwidGFyZ2V0IiwibmVzdGVkS2FyZGlvbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBQUEsUUFDQSxXQUFBQyxDQUFBQyxFQUFBQyxFQUFBLENBQUEsR0FDQSxJQUFBRCxFQUVBLFlBREFFLFFBQUFDLE1BQUEsaUNBbUJBQyxLQUFBQyxTQUFBLENBYkFDLFFBQUEseUJBQ0FDLE9BQUEsd0JBQ0FDLFFBQUEseUJBQ0FDLEtBQUEsc0JBQ0FDLFNBQUEsMkJBQ0FDLFVBQUEsQ0FBQSwyQkFBQSxZQUNBQyxZQUFBLG9CQUNBQyxVQUFBLFFBQ0FDLE1BQUEsSUFDQUMsU0FBQSxvQ0FDQUMsVUFBQSxLQUdBZixHQUNBRyxLQUFBSixRQUFBQSxFQUdBSSxLQUFBYSxjQUNBLENBRUEsWUFBQUEsR0FDQSxNQUFBQyxFQUFBQyxTQUFBQyxpQkFBQWhCLEtBQUFKLFNBQ0FrQixFQUFBRyxRQUVBSCxFQUFBSSxTQUFBQyxJQUNBLE1BQUFDLEVBQUFwQixLQUFBcUIsc0JBQUFGLEdBRUEsS0FBQVQsT0FDQVMsRUFBQUcsTUFBQUMsWUFBQSxrQkFBQXZCLEtBQUFDLFNBQUFTLE1BQUEsSUFBQSxLQUdBVSxFQUFBaEIsUUFBQW9CLGlCQUFBLFNBQUEsS0FDQXhCLEtBQUF5QixtQkFBQUwsRUFBQUQsRUFBQSxJQUdBQSxFQUFBTyxVQUFBQyxTQUFBM0IsS0FBQUMsU0FBQU8sY0FDQVksRUFBQVEsTUFDQSxHQUVBLENBR0EscUJBQUFQLENBQUFGLEdBQ0EsTUFBQUMsRUFBQSxDQUNBeEIsUUFBQXVCLEVBQ0FoQixPQUFBZ0IsRUFBQVUsY0FBQTdCLEtBQUFDLFNBQUFFLFFBQ0FELFFBQUFpQixFQUFBVSxjQUFBN0IsS0FBQUMsU0FBQUMsU0FDQUUsUUFBQWUsRUFBQVUsY0FBQTdCLEtBQUFDLFNBQUFHLFNBQ0EwQixZQUFBLEtBQ0FDLFdBQUEsS0FDQUMsU0FBQSxNQUlBLEdBQUFaLEVBQUFo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b0UsTUFBQSx3Q0FJQSxNQUFBN0QsRUFBQUYsRUFBQWlCLEVBQUFXLFdBQUFYLEVBQUFZLFNBQ0FpQyxFQUFBRSxlQUFBLCtCQUFBLGFBQUFuRSxLQUFBQyxTQUFBVSxTQUFBTixFQUNBLENBR0EsZUFBQStDLENBQUFnQixHQUNBQSxFQUFBcEQsaUJBQUEsR0FBQWhCLEtBQUFKLFdBQUFJLEtBQUFDLFNBQUFPLGVBQUFVLFNBQUFtRCxJQUNBLEdBQUFBLElBQUE3QixNQUFBOEIsT0FBQTVCLFFBQUExQyxLQUFBSixTQUFBLENBQ0EsTUFBQXdCLEVBQUFwQixLQUFBcUIsc0JBQUFnRCxHQUNBckUsS0FBQTRDLFlBQUF4QixFQUNBLElBRUEsQ0FHQSxrQkFBQWlDLENBQUE5QyxHQUNBQSxFQUFBUyxpQkFBQWhCLEtBQUFKLFNBQUFzQixTQUFBQyxJQUNBLE1BQUFvRCxFQUFBdkUsS0FBQXFCLHNCQUFBRixHQUNBbkIsS0FBQTRDLFlBQUEyQixFQUFBLEdBRUEiLCJmaWxlIjoia2FyZGlvbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBLYXJkaW9uIHtcbiAgY29uc3RydWN0b3Ioa2FyZGlvbiwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKCFrYXJkaW9uKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTm8ga2FyZGlvbiBzZWxlY3RvciBwcm92aWRlZCFcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gRGVmYXVsdCBhY2NvcmRpb24gc2V0dGluZ3NcbiAgICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICAgIGNvbnRlbnQ6IFwiW2RhdGEta2FyZGlvbi1jb250ZW50XVwiLFxuICAgICAgaGlkZGVuOiBcIltkYXRhLWthcmRpb24taGlkZGVuXVwiLFxuICAgICAgY3VycmVudDogXCJbZGF0YS1rYXJkaW9uLWN1cnJlbnRdXCIsXG4gICAgICBpY29uOiBcIltkYXRhLWthcmRpb24taWNvbl1cIixcbiAgICAgIG5vdENsb3NlOiBcIltkYXRhLWthcmRpb24tbm90LWNsb3NlXVwiLFxuICAgICAgY29udGFpbmVyOiBbXCJbZGF0YS1rYXJkaW9uLWNvbnRhaW5lcl1cIiwgXCIuc2VjdGlvblwiXSxcbiAgICAgIGFjdGl2ZUNsYXNzOiBcImpzLWthcmRpb24tYWN0aXZlXCIsXG4gICAgICBpY29uQ2xhc3M6IFwiLmljb25cIixcbiAgICAgIHNwZWVkOiAzNTAsXG4gICAgICBpY29uUGF0aDogXCIvYXNzZXRzL3RlbXBsYXRlcy9pbWcvc3ByaXRlLnN2ZyNcIixcbiAgICAgIHNjcm9sbFRvOiBmYWxzZSxcbiAgICB9O1xuXG4gICAgdGhpcy5zZXR0aW5ncyA9IHsgLi4uZGVmYXVsdE9wdGlvbnMsIC4uLm9wdGlvbnMgfTtcbiAgICB0aGlzLmthcmRpb24gPSBrYXJkaW9uO1xuXG4gICAgLy8gSW5pdGlhbGl6aW5nIEFjY29yZGlvbnNcbiAgICB0aGlzLmluaXRLYXJkaW9ucygpO1xuICB9XG5cbiAgaW5pdEthcmRpb25zKCkge1xuICAgIGNvbnN0IGthcmRpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLmthcmRpb24pO1xuICAgIGlmICgha2FyZGlvbnMubGVuZ3RoKSByZXR1cm47XG5cbiAgICBrYXJkaW9ucy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICBjb25zdCBrYXJkaW9uSW5zdGFuY2UgPSB0aGlzLmNyZWF0ZUthcmRpb25JbnN0YW5jZShlbGVtZW50KTtcblxuICAgICAgaWYgKHNwZWVkICE9IDM1MCkge1xuICAgICAgICBlbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KFwiLS1rYXJkaW9uLXNwZWVkXCIsIGAke3RoaXMuc2V0dGluZ3Muc3BlZWQgLyAxMDAwfXNgKTtcbiAgICAgIH1cblxuICAgICAga2FyZGlvbkluc3RhbmNlLmN1cnJlbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5oYW5kbGVLYXJkaW9uQ2xpY2soa2FyZGlvbkluc3RhbmNlLCBlbGVtZW50KTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnModGhpcy5zZXR0aW5ncy5hY3RpdmVDbGFzcykpIHtcbiAgICAgICAga2FyZGlvbkluc3RhbmNlLnNob3coKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIENyZWF0aW5nIGFuIEFjY29yZGlvbiBJbnN0YW5jZVxuICBjcmVhdGVLYXJkaW9uSW5zdGFuY2UoZWxlbWVudCkge1xuICAgIGNvbnN0IGthcmRpb25JbnN0YW5jZSA9IHtcbiAgICAgIGthcmRpb246IGVsZW1lbnQsXG4gICAgICBoaWRkZW46IGVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNldHRpbmdzLmhpZGRlbiksXG4gICAgICBjb250ZW50OiBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZXR0aW5ncy5jb250ZW50KSxcbiAgICAgIGN1cnJlbnQ6IGVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNldHRpbmdzLmN1cnJlbnQpLFxuICAgICAga2FyZGlvbkljb246IG51bGwsXG4gICAgICBpY29uSGlkZGVuOiBudWxsLFxuICAgICAgaWNvblNob3c6IG51bGxcbiAgICB9O1xuXG4gICAgLy8gU2V0dGluZyB1cCB0aGUgaWNvbiBpZiBwcmVzZW50XG4gICAgaWYgKGthcmRpb25JbnN0YW5jZS5jdXJyZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZXR0aW5ncy5pY29uKSkge1xuICAgICAga2FyZGlvbkluc3RhbmNlLmthcmRpb25JY29uID0ga2FyZGlvbkluc3RhbmNlLmN1cnJlbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNldHRpbmdzLmljb24pO1xuICAgICAgbGV0IGljb25MaXN0ID0ga2FyZGlvbkluc3RhbmNlLmthcmRpb25JY29uLmdldEF0dHJpYnV0ZSh0aGlzLnNldHRpbmdzLmljb24ubWF0Y2goL1xcWyhbXlxcXV0rKVxcXS8pWzFdKTtcbiAgICAgIGljb25MaXN0ID0gaWNvbkxpc3Quc3Vic3RyaW5nKDEsIGljb25MaXN0Lmxlbmd0aCAtIDEpO1xuICAgICAgY29uc3QgaWNvbkFycmF5ID0gaWNvbkxpc3Quc3BsaXQoXCIsXCIpO1xuICAgICAgaWYgKGljb25BcnJheS5sZW5ndGggPT09IDIpIHtcbiAgICAgICAga2FyZGlvbkluc3RhbmNlLmljb25IaWRkZW4gPSBpY29uQXJyYXlbMF0udHJpbSgpO1xuICAgICAgICBrYXJkaW9uSW5zdGFuY2UuaWNvblNob3cgPSBpY29uQXJyYXlbMV0udHJpbSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgZGF0YS1rYXJkaW9uLWljb24gYXR0cmlidXRlXCIpO1xuICAgICAgfVxuXG4gICAgICAvLyBDYW5jZWwgZGVmYXVsdCBhY3Rpb24gd2hlbiBjbGlja2luZyBvbiBpY29uXG4gICAgICBrYXJkaW9uSW5zdGFuY2Uua2FyZGlvbkljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBrYXJkaW9uSW5zdGFuY2U7XG4gIH1cblxuICAvLyBIYW5kbGluZyBhIGNsaWNrIG9uIGFuIGFjY29yZGlvblxuICBoYW5kbGVLYXJkaW9uQ2xpY2soa2FyZGlvbkluc3RhbmNlLCBlbGVtZW50KSB7XG4gICAgaWYgKGthcmRpb25JbnN0YW5jZS5jdXJyZW50LmNsb3Nlc3QodGhpcy5zZXR0aW5ncy5jb250ZW50KSkge1xuICAgICAgY29uc3QgcGFyZW50Q29udGVudCA9IGthcmRpb25JbnN0YW5jZS5jdXJyZW50LmNsb3Nlc3QodGhpcy5zZXR0aW5ncy5oaWRkZW4pO1xuICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKHRoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpKSB7XG4gICAgICAgIHRoaXMuaGlkZUthcmRpb24oa2FyZGlvbkluc3RhbmNlKTtcbiAgICAgICAgcGFyZW50Q29udGVudC5zdHlsZS5oZWlnaHQgPSBgJHtwYXJlbnRDb250ZW50LmNsaWVudEhlaWdodCAtIGthcmRpb25JbnN0YW5jZS5jb250ZW50LmNsaWVudEhlaWdodH1weGA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNob3dLYXJkaW9uKGthcmRpb25JbnN0YW5jZSk7XG4gICAgICAgIHBhcmVudENvbnRlbnQuc3R5bGUuaGVpZ2h0ID0gYCR7cGFyZW50Q29udGVudC5jbGllbnRIZWlnaHQgKyBrYXJkaW9uSW5zdGFuY2UuY29udGVudC5jbGllbnRIZWlnaHR9cHhgO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIElmIHRoZSBhY2NvcmRpb24gZG9lcyBub3QgY2xvc2Ugd2hlbiBjbGlja2luZyBvbiBjZXJ0YWluIGVsZW1lbnRzXG4gICAgaWYgKGthcmRpb25JbnN0YW5jZS5jdXJyZW50LmNsb3Nlc3QodGhpcy5zZXR0aW5ncy5ub3RDbG9zZSkpIHtcbiAgICAgIHRoaXMudG9nZ2xlS2FyZGlvbihrYXJkaW9uSW5zdGFuY2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIElmIHRoZSBhY2NvcmRpb24gaXMgaW4gYSBjb250YWluZXIgdGhhdCBjb3ZlcnMgYWxsIGFjY29yZGlvbnNcbiAgICBjb25zdCBjb250YWluZXJFbGVtZW50ID0gdGhpcy5zZXR0aW5ncy5jb250YWluZXIuZmluZCgoc2VsZWN0b3IpID0+IGthcmRpb25JbnN0YW5jZS5jdXJyZW50LmNsb3Nlc3Qoc2VsZWN0b3IpKTtcbiAgICBpZiAoY29udGFpbmVyRWxlbWVudCkge1xuICAgICAgdGhpcy5oaWRlQWxsS2FyZGlvbnMoa2FyZGlvbkluc3RhbmNlLmN1cnJlbnQuY2xvc2VzdChjb250YWluZXJFbGVtZW50KSk7XG4gICAgfVxuXG4gICAgLy8gU2hvdyBvciBoaWRlIHRoZSBhY2NvcmRpb25cbiAgICB0aGlzLnRvZ2dsZUthcmRpb24oa2FyZGlvbkluc3RhbmNlKTtcbiAgICB0aGlzLmhpZGVOZXN0ZWRLYXJkaW9ucyhlbGVtZW50KTtcbiAgfVxuXG4gIC8vIFNob3cgYWNjb3JkaW9uXG4gIHNob3dLYXJkaW9uKGthcmRpb25JbnN0YW5jZSkge1xuICAgIGthcmRpb25JbnN0YW5jZS5oaWRkZW4uc3R5bGUuaGVpZ2h0ID0gYCR7a2FyZGlvbkluc3RhbmNlLmNvbnRlbnQuY2xpZW50SGVpZ2h0fXB4YDtcbiAgICBrYXJkaW9uSW5zdGFuY2Uua2FyZGlvbi5jbGFzc0xpc3QuYWRkKHRoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpO1xuXG4gICAgLy8gU2Nyb2xsIHRvIGFjY29yZGlvblxuICAgIGlmICh0aGlzLnNldHRpbmdzLnNjcm9sbFRvKSB7XG4gICAgICBrYXJkaW9uSW5zdGFuY2UuY29udGVudC5zY3JvbGxJbnRvVmlldyh7XG4gICAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxuICAgICAgICBibG9jazogXCJzdGFydFwiLFxuICAgICAgICBpbmxpbmU6IFwibmVhcmVzdFwiXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBSZXBsYWNpbmcgdGhlIGljb25cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMucmVwbGFjZUljb24oa2FyZGlvbkluc3RhbmNlLCBmYWxzZSk7XG4gICAgfSwgdGhpcy5zZXR0aW5ncy5zcGVlZCAvIDIpO1xuICB9XG5cbiAgLy8gSGlkZSBhY2NvcmRpb25cbiAgaGlkZUthcmRpb24oa2FyZGlvbkluc3RhbmNlKSB7XG4gICAga2FyZGlvbkluc3RhbmNlLmhpZGRlbi5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcImhlaWdodFwiKTtcbiAgICBrYXJkaW9uSW5zdGFuY2Uua2FyZGlvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnJlcGxhY2VJY29uKGthcmRpb25JbnN0YW5jZSwgdHJ1ZSk7XG4gICAgfSwgdGhpcy5zZXR0aW5ncy5zcGVlZCAvIDIpO1xuICB9XG5cbiAgLy8gVG9nZ2xlIGFjY29yZGlvblxuICB0b2dnbGVLYXJkaW9uKGthcmRpb25JbnN0YW5jZSkge1xuICAgIC8vIFNjcm9sbCB0byBhY2NvcmRpb25cbiAgICBpZiAoIWthcmRpb25JbnN0YW5jZS5rYXJkaW9uLmNsYXNzTGlzdC5jb250YWlucyh0aGlzLnNldHRpbmdzLmFjdGl2ZUNsYXNzKSAmJiB0aGlzLnNldHRpbmdzLnNjcm9sbFRvKSB7XG4gICAgICBrYXJkaW9uSW5zdGFuY2UuY29udGVudC5zY3JvbGxJbnRvVmlldyh7XG4gICAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxuICAgICAgICBibG9jazogXCJzdGFydFwiLFxuICAgICAgICBpbmxpbmU6IFwibmVhcmVzdFwiXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBrYXJkaW9uSW5zdGFuY2Uua2FyZGlvbi5jbGFzc0xpc3QuY29udGFpbnModGhpcy5zZXR0aW5ncy5hY3RpdmVDbGFzcylcbiAgICAgID8gdGhpcy5oaWRlS2FyZGlvbihrYXJkaW9uSW5zdGFuY2UpXG4gICAgICA6IHRoaXMuc2hvd0thcmRpb24oa2FyZGlvbkluc3RhbmNlKTtcblxuICAgIC8vIFNjcm9sbFRyaWdnZXIgVXBkYXRlIGJ5IEdTQVBcbiAgICBpZiAoU2Nyb2xsVHJpZ2dlcikge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIFNjcm9sbFRyaWdnZXIucmVmcmVzaCgpO1xuICAgICAgfSwgdGhpcy5zZXR0aW5ncy5zcGVlZCk7XG4gICAgfVxuICB9XG5cbiAgLy8gUmVwbGFjaW5nIHRoZSBhY2NvcmRpb24gaWNvblxuICByZXBsYWNlSWNvbihrYXJkaW9uSW5zdGFuY2UsIGhpZGRlbiA9IHRydWUpIHtcbiAgICBpZiAoIWthcmRpb25JbnN0YW5jZS5rYXJkaW9uSWNvbikgcmV0dXJuO1xuICAgIGNvbnN0IHVzZVRhZyA9IGthcmRpb25JbnN0YW5jZS5rYXJkaW9uSWNvbi5xdWVyeVNlbGVjdG9yKFwidXNlXCIpO1xuICAgIGlmICghdXNlVGFnKSB7XG4gICAgICBjb25zb2xlLmRlYnVnKFwiTm8gdXNlIHRhZyBmb3VuZCBpbiB0aGUga2FyZGlvbiBpY29uXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGljb24gPSBoaWRkZW4gPyBrYXJkaW9uSW5zdGFuY2UuaWNvbkhpZGRlbiA6IGthcmRpb25JbnN0YW5jZS5pY29uU2hvdztcbiAgICB1c2VUYWcuc2V0QXR0cmlidXRlTlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsIFwieGxpbms6aHJlZlwiLCB0aGlzLnNldHRpbmdzLmljb25QYXRoICsgaWNvbik7XG4gIH1cblxuICAvLyBIaWRlIGFsbCBhY2NvcmRpb25zIGluIGNvbnRhaW5lclxuICBoaWRlQWxsS2FyZGlvbnMoY2xvc2VzdE9iamVjdCkge1xuICAgIGNsb3Nlc3RPYmplY3QucXVlcnlTZWxlY3RvckFsbChgJHt0aGlzLmthcmRpb259LiR7dGhpcy5zZXR0aW5ncy5hY3RpdmVDbGFzc31gKS5mb3JFYWNoKChhY3RpdmVLYXJkaW9uKSA9PiB7XG4gICAgICBpZiAoYWN0aXZlS2FyZGlvbiAhPT0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QodGhpcy5rYXJkaW9uKSkge1xuICAgICAgICBjb25zdCBrYXJkaW9uSW5zdGFuY2UgPSB0aGlzLmNyZWF0ZUthcmRpb25JbnN0YW5jZShhY3RpdmVLYXJkaW9uKTtcbiAgICAgICAgdGhpcy5oaWRlS2FyZGlvbihrYXJkaW9uSW5zdGFuY2UpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy8gSGlkZSBuZXN0ZWQgYWNjb3JkaW9uc1xuICBoaWRlTmVzdGVkS2FyZGlvbnMoY29udGFpbmVyKSB7XG4gICAgY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5rYXJkaW9uKS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICBjb25zdCBuZXN0ZWRLYXJkaW9uID0gdGhpcy5jcmVhdGVLYXJkaW9uSW5zdGFuY2UoZWxlbWVudCk7XG4gICAgICB0aGlzLmhpZGVLYXJkaW9uKG5lc3RlZEthcmRpb24pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=
